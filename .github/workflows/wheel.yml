name: "Create Python Wheels"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # release:
  #   types: [created]

env:
  STAN_BACKEND: "PYSTAN,CMDSTANPY"
  # Env vars, required because CIBW may build inside a Docker container
  CIBW_ENVIRONMENT: STAN_BACKEND="PYSTAN,CMDSTANPY"
  # Python versions for cibuildwheel
  CIBW_BUILD: "cp38-*"
  # Architectures for cibuildwheel
  CIBW_ARCHS: "native"
  # Use pypa/build as the build frontend
  CIBW_BUILD_FRONTEND: "build"

jobs:
  make-wheels-macos-linux:
    name: ${{ matrix.python-version }}-${{ matrix.architecture }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - "macos-latest"
          - "ubuntu-latest"
        python-version:
          - "3.8"
        architecture:
          - x64

      fail-fast: false

    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v2

      - name: "Set up Python"
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: "Install cibuildwheel"
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel build

      - name: "Create wheel"
        run: |
          cd python && python -m cibuildwheel --output-dir wheelhouse

      - name: "Upload wheel as artifact"
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-wheel
          path: "./**/*.whl"
