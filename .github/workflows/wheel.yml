name: "Create Python Wheels and publish to PyPI"

on:
  release:
    types: [ created ]
  workflow_dispatch: {}


env:
  STAN_BACKEND: "CMDSTANPY"

jobs:
  make-wheels:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macos-latest", "ubuntu-latest", "windows-latest"]
      fail-fast: false

    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v3

      - name: "Restore RTools40"
        if: startsWith(runner.os, 'Windows')
        id: cache-rtools
        uses: actions/cache@v2
        with:
          path: C:/rtools40
          key: ${{ runner.os }}-${{ env.OS_VERSION }}-rtools-v1

      - name: "Build wheels"
        uses: pypa/cibuildwheel@v2.6.0
        with:
          package-dir: python
        env:
          CIBW_ENVIRONMENT: >
            STAN_BACKEND="${{ env.STAN_BACKEND }}"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BUILD: cp37-* cp38-* cp39-* cp310-*
          CIBW_SKIP: "*musllinux*"
          CIBW_ARCHS: native
          CIBW_BUILD_FRONTEND: build
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest --pyargs prophet

      - name: "Upload wheel as artifact"
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-wheel
          path: "./**/*.whl"

  upload_wheels:
    name: Upload wheels to PyPi
    runs-on: ubuntu-latest
    needs: [make-wheels]

    steps:
      - uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Publish package to test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish package to official PyPI based on release tag
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: wheelhouse/